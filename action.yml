name: 'Build Raycast Extension'
description: Ensure that a Raycast extension can be built successfully
inputs:
  extension_path:
    description: The relative path within your repo where the Raycast extension is located. We will expect `package.json` and `package-lock.json` files to be found here. This is useful if you have multiple extensions in one repo - for example if you're using Raycast for Teams (<https://developers.raycast.com/teams-beta/getting-started>).
    required: false
    default: '.'
  lint:
    description: Whether the code should be linted to check its style and formatting.
    required: false
    default: true
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v3
      with:
        cache: npm
        cache-dependency-path: ${{ inputs.extension_path }}/package-lock.json
    - name: Install npm dependencies
      run: npm ci
      shell: bash
      working-directory: ${{ inputs.extension_path }}
    - name: Build extension
      run: npx ray build -e dist
      shell: bash
      working-directory: ${{ inputs.extension_path }}
    - name: Remove `owner` from `package.json`, if present, to support linting
      if: ${{ inputs.lint == 'true' }}
      run: contents="$(jq 'del(.owner)' package.json)" && echo -E "${contents}" > package.json
      shell: bash
      working-directory: ${{ inputs.extension_path }}
    - name: Check code style and formatting
      if: ${{ inputs.lint == 'true' }}
      run: npx ray lint
      shell: bash
      working-directory: ${{ inputs.extension_path }}
